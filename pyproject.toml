[tool.poetry]
name = "nautobot-circuit-maintenance"
version = "0.5.0b1"
description = "Nautobot plugin to automatically handle Circuit Maintenances Notifications"
authors = ["Network to Code, LLC <opensource@networktocode.com>"]

license = "Apache-2.0"

readme = "README.md"
homepage = "https://github.com/nautobot/nautobot-plugin-circuit-maintenance"
repository = "https://github.com/nautobot/nautobot-plugin-circuit-maintenance"
keywords = ["nautobot", "nautobot-plugin"]
include = [
    "LICENSE",
    "README.md",
]
packages = [
    { include = "nautobot_circuit_maintenance" },
]

[tool.poetry.dependencies]
python = "^3.6.2"
nautobot = "*"
nautobot-capacity-metrics = {version = "*", optional = true }
# nautobot = { git = "https://github.com/nautobot/nautobot.git", branch = "develop"}
bs4 = "^0.0.1"
pydantic = "^1.8.1"
circuit-maintenance-parser = "^2.0.0"
google-api-python-client = "^2.9.0"
google-oauth = "^1.0.0"
google-auth-httplib2 = "^0.1.0"
google-auth-oauthlib = "^0.5.0"
# Added due an issue with Markdown 3.3.5
markdown = "!=3.3.5"

[tool.poetry.dev-dependencies]
invoke = "*"
black = "*"
# Added pinned typed-add to overcome issues with black version
typed-ast = "^1.5.0"
django-debug-toolbar = "*"
yamllint = "*"
bandit = "*"
pylint = "*"
pylint-django = "*"
pydocstyle = "*"
# we need to pin flake8 because of package dependencies that cause it to downgrade and 
# therefore cause issues with linting since older versions do not take .flake8 as config
flake8 = "^3.9.2"
parameterized = "*"
mysqlclient = "*"


[tool.poetry.extras]
metrics = ["nautobot-capacity-metrics"]

[tool.black]
line-length = 120
target-version = ['py37']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | settings.py     # This is where you define files that should not be stylized by black
                     # the root of the project
)
'''

[tool.pylint.master]
# Include the pylint_django plugin to avoid spurious warnings about Django patterns
load-plugins="pylint_django"

# Don't cache data for later comparisons
persistent="no"

# Don't raise alarms if args/kwargs has an issue, as may be required, just as a decorator
ignored-argument-names="args|kwargs"

[tool.pylint.basic]
# No docstrings required for private methods (Pylint default), or for test_ functions, or for inner Meta classes.
no-docstring-rgx="^(_|test_|Meta$)"

[tool.pylint.messages_control]
# Line length is enforced by Black, so pylint doesn't need to check it.
# Pylint and Black disagree about how to format multi-line arrays; Black wins.
#
# agruments-differ:
# 21:4: W0221: Number of parameters was 1 in 'TestCase.setUp' and is now 1 in overridden 'GraphQLTestCase.setUp'
#
# attribute-defined-outside-init
# nautobot_circuit_maintenance/views.py:74:8: W0201: Attribute 'extra_content' defined outside __init__
disable = """,
    line-too-long,
    bad-continuation,
    too-few-public-methods,
    duplicate-code,
    too-many-ancestors,
    attribute-defined-outside-init,
    arguments-differ,  
    """

[tool.pylint.miscellaneous]
# Don't flag TODO as a failure, let us commit with things that still need to be done in the code
notes = """,
    FIXME,
    XXX,
    """

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = [
    "tests"
]
adopts = "-vv"
